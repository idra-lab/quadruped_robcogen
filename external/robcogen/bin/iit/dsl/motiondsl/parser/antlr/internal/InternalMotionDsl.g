/*
 * generated by Xtext 2.10.0
 */
grammar InternalMotionDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package iit.dsl.motiondsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package iit.dsl.motiondsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import iit.dsl.motiondsl.services.MotionDslGrammarAccess;

}

@parser::members {

 	private MotionDslGrammarAccess grammarAccess;

    public InternalMotionDslParser(TokenStream input, MotionDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MotionDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Model'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getModelKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getFramesListFramesListParserRuleCall_2_0());
				}
				lv_framesList_2_0=ruleFramesList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"framesList",
						lv_framesList_2_0,
						"iit.dsl.motiondsl.MotionDsl.FramesList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getParamGroupsParametersDeclarationParserRuleCall_3_0());
				}
				lv_paramGroups_3_0=ruleParametersDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"paramGroups",
						lv_paramGroups_3_0,
						"iit.dsl.motiondsl.MotionDsl.ParametersDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='Convention'
		{
			newLeafNode(otherlv_4, grammarAccess.getModelAccess().getConventionKeyword_4());
		}
		otherlv_5='='
		{
			newLeafNode(otherlv_5, grammarAccess.getModelAccess().getEqualsSignKeyword_5());
		}
		(
			(
				(
					lv_convention_6_1='local'
					{
						newLeafNode(lv_convention_6_1, grammarAccess.getModelAccess().getConventionLocalKeyword_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelRule());
						}
						setWithLastConsumed($current, "convention", lv_convention_6_1, null);
					}
					    |
					lv_convention_6_2='fixed'
					{
						newLeafNode(lv_convention_6_2, grammarAccess.getModelAccess().getConventionFixedKeyword_6_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelRule());
						}
						setWithLastConsumed($current, "convention", lv_convention_6_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getMotionsMotionParserRuleCall_7_0());
				}
				lv_motions_7_0=ruleMotion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"motions",
						lv_motions_7_0,
						"iit.dsl.motiondsl.MotionDsl.Motion");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleFramesList
entryRuleFramesList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFramesListRule()); }
	iv_ruleFramesList=ruleFramesList
	{ $current=$iv_ruleFramesList.current; }
	EOF;

// Rule FramesList
ruleFramesList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Frames'
		{
			newLeafNode(otherlv_0, grammarAccess.getFramesListAccess().getFramesKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getFramesListAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFramesListAccess().getItemsFrameParserRuleCall_2_0());
				}
				lv_items_2_0=ruleFrame
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFramesListRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"iit.dsl.motiondsl.MotionDsl.Frame");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getFramesListAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFramesListAccess().getItemsFrameParserRuleCall_3_1_0());
					}
					lv_items_4_0=ruleFrame
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFramesListRule());
						}
						add(
							$current,
							"items",
							lv_items_4_0,
							"iit.dsl.motiondsl.MotionDsl.Frame");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getFramesListAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleParameterLiteral
entryRuleParameterLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterLiteralRule()); }
	iv_ruleParameterLiteral=ruleParameterLiteral
	{ $current=$iv_ruleParameterLiteral.current; }
	EOF;

// Rule ParameterLiteral
ruleParameterLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getParameterLiteralAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getParameterLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleParametersDeclaration
entryRuleParametersDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParametersDeclarationRule()); }
	iv_ruleParametersDeclaration=ruleParametersDeclaration
	{ $current=$iv_ruleParametersDeclaration.current; }
	EOF;

// Rule ParametersDeclaration
ruleParametersDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Params'
		{
			newLeafNode(otherlv_0, grammarAccess.getParametersDeclarationAccess().getParamsKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getParametersDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParametersDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getParametersDeclarationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParametersDeclarationAccess().getParamsParameterLiteralParserRuleCall_3_0());
				}
				lv_params_3_0=ruleParameterLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParametersDeclarationRule());
					}
					add(
						$current,
						"params",
						lv_params_3_0,
						"iit.dsl.motiondsl.MotionDsl.ParameterLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getParametersDeclarationAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParametersDeclarationAccess().getParamsParameterLiteralParserRuleCall_4_1_0());
					}
					lv_params_5_0=ruleParameterLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParametersDeclarationRule());
						}
						add(
							$current,
							"params",
							lv_params_5_0,
							"iit.dsl.motiondsl.MotionDsl.ParameterLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getParametersDeclarationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleFrame
entryRuleFrame returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFrameRule()); }
	iv_ruleFrame=ruleFrame
	{ $current=$iv_ruleFrame.current; }
	EOF;

// Rule Frame
ruleFrame returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getFrameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFrameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleMotion
entryRuleMotion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMotionRule()); }
	iv_ruleMotion=ruleMotion
	{ $current=$iv_ruleMotion.current; }
	EOF;

// Rule Motion
ruleMotion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMotionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getMotionAccess().getStartFrameCrossReference_0_0());
				}
			)
		)
		otherlv_1='->'
		{
			newLeafNode(otherlv_1, grammarAccess.getMotionAccess().getHyphenMinusGreaterThanSignKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMotionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getMotionAccess().getEndFrameCrossReference_2_0());
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getMotionAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMotionAccess().getPrimitiveMotionsPrimitiveMotionParserRuleCall_4_0());
				}
				lv_primitiveMotions_4_0=rulePrimitiveMotion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMotionRule());
					}
					add(
						$current,
						"primitiveMotions",
						lv_primitiveMotions_4_0,
						"iit.dsl.motiondsl.MotionDsl.PrimitiveMotion");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getMotionAccess().getLeftSquareBracketKeyword_5_0());
			}
			(
				(
					lv_userName_6_0=RULE_ID
					{
						newLeafNode(lv_userName_6_0, grammarAccess.getMotionAccess().getUserNameIDTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMotionRule());
						}
						setWithLastConsumed(
							$current,
							"userName",
							lv_userName_6_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getMotionAccess().getRightSquareBracketKeyword_5_2());
			}
		)?
	)
;

// Entry rule entryRulePrimitiveMotion
entryRulePrimitiveMotion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveMotionRule()); }
	iv_rulePrimitiveMotion=rulePrimitiveMotion
	{ $current=$iv_rulePrimitiveMotion.current; }
	EOF;

// Rule PrimitiveMotion
rulePrimitiveMotion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimitiveMotionAccess().getRotationParserRuleCall_0());
		}
		this_Rotation_0=ruleRotation
		{
			$current = $this_Rotation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimitiveMotionAccess().getTranslationParserRuleCall_1());
		}
		this_Translation_1=ruleTranslation
		{
			$current = $this_Translation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRotation
entryRuleRotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotationRule()); }
	iv_ruleRotation=ruleRotation
	{ $current=$iv_ruleRotation.current; }
	EOF;

// Rule Rotation
ruleRotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRotationAccess().getRotxParserRuleCall_0());
		}
		this_Rotx_0=ruleRotx
		{
			$current = $this_Rotx_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRotationAccess().getRotyParserRuleCall_1());
		}
		this_Roty_1=ruleRoty
		{
			$current = $this_Roty_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRotationAccess().getRotzParserRuleCall_2());
		}
		this_Rotz_2=ruleRotz
		{
			$current = $this_Rotz_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTranslation
entryRuleTranslation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTranslationRule()); }
	iv_ruleTranslation=ruleTranslation
	{ $current=$iv_ruleTranslation.current; }
	EOF;

// Rule Translation
ruleTranslation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTranslationAccess().getTrxParserRuleCall_0());
		}
		this_Trx_0=ruleTrx
		{
			$current = $this_Trx_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTranslationAccess().getTryParserRuleCall_1());
		}
		this_Try_1=ruleTry
		{
			$current = $this_Try_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTranslationAccess().getTrzParserRuleCall_2());
		}
		this_Trz_2=ruleTrz
		{
			$current = $this_Trz_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTrx
entryRuleTrx returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrxRule()); }
	iv_ruleTrx=ruleTrx
	{ $current=$iv_ruleTrx.current; }
	EOF;

// Rule Trx
ruleTrx returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='trx'
		{
			newLeafNode(otherlv_0, grammarAccess.getTrxAccess().getTrxKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTrxAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTrxAccess().getArgArgSpecParserRuleCall_2_0());
				}
				lv_arg_2_0=ruleArgSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTrxRule());
					}
					set(
						$current,
						"arg",
						lv_arg_2_0,
						"iit.dsl.motiondsl.MotionDsl.ArgSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getTrxAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleTry
entryRuleTry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTryRule()); }
	iv_ruleTry=ruleTry
	{ $current=$iv_ruleTry.current; }
	EOF;

// Rule Try
ruleTry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='try'
		{
			newLeafNode(otherlv_0, grammarAccess.getTryAccess().getTryKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTryAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTryAccess().getArgArgSpecParserRuleCall_2_0());
				}
				lv_arg_2_0=ruleArgSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTryRule());
					}
					set(
						$current,
						"arg",
						lv_arg_2_0,
						"iit.dsl.motiondsl.MotionDsl.ArgSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getTryAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleTrz
entryRuleTrz returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrzRule()); }
	iv_ruleTrz=ruleTrz
	{ $current=$iv_ruleTrz.current; }
	EOF;

// Rule Trz
ruleTrz returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='trz'
		{
			newLeafNode(otherlv_0, grammarAccess.getTrzAccess().getTrzKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTrzAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTrzAccess().getArgArgSpecParserRuleCall_2_0());
				}
				lv_arg_2_0=ruleArgSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTrzRule());
					}
					set(
						$current,
						"arg",
						lv_arg_2_0,
						"iit.dsl.motiondsl.MotionDsl.ArgSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getTrzAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleRotx
entryRuleRotx returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotxRule()); }
	iv_ruleRotx=ruleRotx
	{ $current=$iv_ruleRotx.current; }
	EOF;

// Rule Rotx
ruleRotx returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rotx'
		{
			newLeafNode(otherlv_0, grammarAccess.getRotxAccess().getRotxKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRotxAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotxAccess().getArgArgSpecParserRuleCall_2_0());
				}
				lv_arg_2_0=ruleArgSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotxRule());
					}
					set(
						$current,
						"arg",
						lv_arg_2_0,
						"iit.dsl.motiondsl.MotionDsl.ArgSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getRotxAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleRoty
entryRuleRoty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotyRule()); }
	iv_ruleRoty=ruleRoty
	{ $current=$iv_ruleRoty.current; }
	EOF;

// Rule Roty
ruleRoty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='roty'
		{
			newLeafNode(otherlv_0, grammarAccess.getRotyAccess().getRotyKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRotyAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotyAccess().getArgArgSpecParserRuleCall_2_0());
				}
				lv_arg_2_0=ruleArgSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotyRule());
					}
					set(
						$current,
						"arg",
						lv_arg_2_0,
						"iit.dsl.motiondsl.MotionDsl.ArgSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getRotyAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleRotz
entryRuleRotz returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotzRule()); }
	iv_ruleRotz=ruleRotz
	{ $current=$iv_ruleRotz.current; }
	EOF;

// Rule Rotz
ruleRotz returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rotz'
		{
			newLeafNode(otherlv_0, grammarAccess.getRotzAccess().getRotzKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRotzAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotzAccess().getArgArgSpecParserRuleCall_2_0());
				}
				lv_arg_2_0=ruleArgSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotzRule());
					}
					set(
						$current,
						"arg",
						lv_arg_2_0,
						"iit.dsl.motiondsl.MotionDsl.ArgSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getRotzAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleArgSpec
entryRuleArgSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgSpecRule()); }
	iv_ruleArgSpec=ruleArgSpec
	{ $current=$iv_ruleArgSpec.current; }
	EOF;

// Rule ArgSpec
ruleArgSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArgSpecAccess().getFloatLiteralParserRuleCall_0());
		}
		this_FloatLiteral_0=ruleFloatLiteral
		{
			$current = $this_FloatLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArgSpecAccess().getExprParserRuleCall_1());
		}
		this_Expr_1=ruleExpr
		{
			$current = $this_Expr_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArgSpecAccess().getConstantParserRuleCall_2());
		}
		this_Constant_2=ruleConstant
		{
			$current = $this_Constant_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloatLiteralRule()); }
	iv_ruleFloatLiteral=ruleFloatLiteral
	{ $current=$iv_ruleFloatLiteral.current; }
	EOF;

// Rule FloatLiteral
ruleFloatLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_FLOAT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFloatLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"iit.dsl.motiondsl.MotionDsl.FLOAT");
			}
		)
	)
;

// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	iv_ruleConstant=ruleConstant
	{ $current=$iv_ruleConstant.current; }
	EOF;

// Rule Constant
ruleConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_minus_0_0='-'
				{
					newLeafNode(lv_minus_0_0, grammarAccess.getConstantAccess().getMinusHyphenMinusKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstantRule());
					}
					setWithLastConsumed($current, "minus", true, "-");
				}
			)
		)?
		otherlv_1='consts'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstantAccess().getConstsKeyword_1());
		}
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getConstantAccess().getFullStopKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleExpr
entryRuleExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprRule()); }
	iv_ruleExpr=ruleExpr
	{ $current=$iv_ruleExpr.current; }
	EOF;

// Rule Expr
ruleExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExprAccess().getPlainExprParserRuleCall_0());
		}
		this_PlainExpr_0=rulePlainExpr
		{
			$current = $this_PlainExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExprAccess().getMultExprParserRuleCall_1());
		}
		this_MultExpr_1=ruleMultExpr
		{
			$current = $this_MultExpr_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExprAccess().getDivExprParserRuleCall_2());
		}
		this_DivExpr_2=ruleDivExpr
		{
			$current = $this_DivExpr_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePlainExpr
entryRulePlainExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlainExprRule()); }
	iv_rulePlainExpr=rulePlainExpr
	{ $current=$iv_rulePlainExpr.current; }
	EOF;

// Rule PlainExpr
rulePlainExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPlainExprAccess().getIdentifierIdentifierParserRuleCall_0());
			}
			lv_identifier_0_0=ruleIdentifier
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPlainExprRule());
				}
				set(
					$current,
					"identifier",
					lv_identifier_0_0,
					"iit.dsl.motiondsl.MotionDsl.Identifier");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMultExpr
entryRuleMultExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultExprRule()); }
	iv_ruleMultExpr=ruleMultExpr
	{ $current=$iv_ruleMultExpr.current; }
	EOF;

// Rule MultExpr
ruleMultExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_mult_0_0=RULE_FLOAT
				{
					newLeafNode(lv_mult_0_0, grammarAccess.getMultExprAccess().getMultFLOATTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultExprRule());
					}
					setWithLastConsumed(
						$current,
						"mult",
						lv_mult_0_0,
						"iit.dsl.motiondsl.MotionDsl.FLOAT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMultExprAccess().getIdentifierIdentifierParserRuleCall_1_0());
				}
				lv_identifier_1_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultExprRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_1_0,
						"iit.dsl.motiondsl.MotionDsl.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDivExpr
entryRuleDivExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDivExprRule()); }
	iv_ruleDivExpr=ruleDivExpr
	{ $current=$iv_ruleDivExpr.current; }
	EOF;

// Rule DivExpr
ruleDivExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDivExprAccess().getIdentifierIdentifierParserRuleCall_0_0());
				}
				lv_identifier_0_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDivExprRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_0_0,
						"iit.dsl.motiondsl.MotionDsl.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='/'
		{
			newLeafNode(otherlv_1, grammarAccess.getDivExprAccess().getSolidusKeyword_1());
		}
		(
			(
				lv_div_2_0=RULE_FLOAT
				{
					newLeafNode(lv_div_2_0, grammarAccess.getDivExprAccess().getDivFLOATTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDivExprRule());
					}
					setWithLastConsumed(
						$current,
						"div",
						lv_div_2_0,
						"iit.dsl.motiondsl.MotionDsl.FLOAT");
				}
			)
		)
	)
;

// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	iv_ruleIdentifier=ruleIdentifier
	{ $current=$iv_ruleIdentifier.current; }
	EOF;

// Rule Identifier
ruleIdentifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIdentifierAccess().getParameterParserRuleCall_0());
		}
		this_Parameter_0=ruleParameter
		{
			$current = $this_Parameter_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIdentifierAccess().getVariableParserRuleCall_1());
		}
		this_Variable_1=ruleVariable
		{
			$current = $this_Variable_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIdentifierAccess().getPILiteralParserRuleCall_2());
		}
		this_PILiteral_2=rulePILiteral
		{
			$current = $this_PILiteral_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_minus_0_0='-'
				{
					newLeafNode(lv_minus_0_0, grammarAccess.getParameterAccess().getMinusHyphenMinusKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed($current, "minus", true, "-");
				}
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getParameterAccess().getParamParameterLiteralCrossReference_1_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_minus_0_0='-'
				{
					newLeafNode(lv_minus_0_0, grammarAccess.getVariableAccess().getMinusHyphenMinusKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed($current, "minus", true, "-");
				}
			)
		)?
		(
			(
				lv_varname_1_0=RULE_ID
				{
					newLeafNode(lv_varname_1_0, grammarAccess.getVariableAccess().getVarnameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"varname",
						lv_varname_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePILiteral
entryRulePILiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPILiteralRule()); }
	iv_rulePILiteral=rulePILiteral
	{ $current=$iv_rulePILiteral.current; }
	EOF;

// Rule PILiteral
rulePILiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_minus_0_0='-'
				{
					newLeafNode(lv_minus_0_0, grammarAccess.getPILiteralAccess().getMinusHyphenMinusKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPILiteralRule());
					}
					setWithLastConsumed($current, "minus", true, "-");
				}
			)
		)?
		(
			(
				lv_text_1_0=RULE_PI
				{
					newLeafNode(lv_text_1_0, grammarAccess.getPILiteralAccess().getTextPITerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPILiteralRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"iit.dsl.motiondsl.MotionDsl.PI");
				}
			)
		)
	)
;

// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFQNRule()); }
	iv_ruleFQN=ruleFQN
	{ $current=$iv_ruleFQN.current.getText(); }
	EOF;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1());
		}
		this_ID_2=RULE_ID
		{
			$current.merge(this_ID_2);
		}
		{
			newLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_2());
		}
	)
;

RULE_PI : ('PI'|'pi'|'Pi');

RULE_FLOAT : ('+'?|'-') ('0'..'9')* '.' ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
