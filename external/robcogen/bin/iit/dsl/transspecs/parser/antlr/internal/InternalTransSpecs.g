/*
 * generated by Xtext 2.10.0
 */
grammar InternalTransSpecs;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package iit.dsl.transspecs.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package iit.dsl.transspecs.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import iit.dsl.transspecs.services.TransSpecsGrammarAccess;

}

@parser::members {

 	private TransSpecsGrammarAccess grammarAccess;

    public InternalTransSpecsParser(TokenStream input, TransSpecsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DesiredTransforms";
   	}

   	@Override
   	protected TransSpecsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDesiredTransforms
entryRuleDesiredTransforms returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDesiredTransformsRule()); }
	iv_ruleDesiredTransforms=ruleDesiredTransforms
	{ $current=$iv_ruleDesiredTransforms.current; }
	EOF;

// Rule DesiredTransforms
ruleDesiredTransforms returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDesiredTransformsAccess().getTitleParserRuleCall_0());
		}
		ruleTitle
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDesiredTransformsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDesiredTransformsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDesiredTransformsAccess().getFramesListFramesListParserRuleCall_2_0());
				}
				lv_framesList_2_0=ruleFramesList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDesiredTransformsRule());
					}
					set(
						$current,
						"framesList",
						lv_framesList_2_0,
						"iit.dsl.coord.CoordTransDsl.FramesList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDesiredTransformsAccess().getTransformsTransformsListParserRuleCall_3_0());
				}
				lv_transforms_3_0=ruleTransformsList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDesiredTransformsRule());
					}
					set(
						$current,
						"transforms",
						lv_transforms_3_0,
						"iit.dsl.transspecs.TransSpecs.TransformsList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDesiredTransformsAccess().getJacobiansJacobiansListParserRuleCall_4_0());
				}
				lv_jacobians_4_0=ruleJacobiansList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDesiredTransformsRule());
					}
					set(
						$current,
						"jacobians",
						lv_jacobians_4_0,
						"iit.dsl.transspecs.TransSpecs.JacobiansList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTitle
entryRuleTitle returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTitleRule()); }
	iv_ruleTitle=ruleTitle
	{ $current=$iv_ruleTitle.current.getText(); }
	EOF;

// Rule Title
ruleTitle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Robot'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTitleAccess().getRobotKeyword_0());
		}
		    |
		kw='Model'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTitleAccess().getModelKeyword_1());
		}
	)
;

// Entry rule entryRuleTransformsList
entryRuleTransformsList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformsListRule()); }
	iv_ruleTransformsList=ruleTransformsList
	{ $current=$iv_ruleTransformsList.current; }
	EOF;

// Rule TransformsList
ruleTransformsList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTransformsListAccess().getTransformsListAction_0(),
					$current);
			}
		)
		otherlv_1='Transforms'
		{
			newLeafNode(otherlv_1, grammarAccess.getTransformsListAccess().getTransformsKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTransformsListAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransformsListAccess().getSpecsFramePairParserRuleCall_3_0());
				}
				lv_specs_3_0=ruleFramePair
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransformsListRule());
					}
					add(
						$current,
						"specs",
						lv_specs_3_0,
						"iit.dsl.transspecs.TransSpecs.FramePair");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTransformsListAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleJacobiansList
entryRuleJacobiansList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJacobiansListRule()); }
	iv_ruleJacobiansList=ruleJacobiansList
	{ $current=$iv_ruleJacobiansList.current; }
	EOF;

// Rule JacobiansList
ruleJacobiansList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getJacobiansListAccess().getJacobiansListAction_0(),
					$current);
			}
		)
		otherlv_1='Jacobians'
		{
			newLeafNode(otherlv_1, grammarAccess.getJacobiansListAccess().getJacobiansKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getJacobiansListAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJacobiansListAccess().getSpecsFramePairParserRuleCall_3_0());
				}
				lv_specs_3_0=ruleFramePair
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJacobiansListRule());
					}
					add(
						$current,
						"specs",
						lv_specs_3_0,
						"iit.dsl.transspecs.TransSpecs.FramePair");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getJacobiansListAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleFramePair
entryRuleFramePair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFramePairRule()); }
	iv_ruleFramePair=ruleFramePair
	{ $current=$iv_ruleFramePair.current; }
	EOF;

// Rule FramePair
ruleFramePair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFramePairAccess().getExplicitFramePairParserRuleCall_0());
		}
		this_ExplicitFramePair_0=ruleExplicitFramePair
		{
			$current = $this_ExplicitFramePair_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFramePairAccess().getImplicitFramePairParserRuleCall_1());
		}
		this_ImplicitFramePair_1=ruleImplicitFramePair
		{
			$current = $this_ImplicitFramePair_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExplicitFramePair
entryRuleExplicitFramePair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExplicitFramePairRule()); }
	iv_ruleExplicitFramePair=ruleExplicitFramePair
	{ $current=$iv_ruleExplicitFramePair.current; }
	EOF;

// Rule ExplicitFramePair
ruleExplicitFramePair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getExplicitFramePairAccess().getLeftFrameParserRuleCall_0_0());
			}
			ruleLeftFrame
			{
				afterParserOrEnumRuleCall();
			}
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getExplicitFramePairAccess().getEqualsSignKeyword_0_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExplicitFramePairRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getExplicitFramePairAccess().getBaseFrameCrossReference_0_2_0());
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getExplicitFramePairAccess().getCommaKeyword_0_3());
				}
			)?
			{
				newCompositeNode(grammarAccess.getExplicitFramePairAccess().getRightFrameParserRuleCall_0_4());
			}
			ruleRightFrame
			{
				afterParserOrEnumRuleCall();
			}
			otherlv_5='='
			{
				newLeafNode(otherlv_5, grammarAccess.getExplicitFramePairAccess().getEqualsSignKeyword_0_5());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExplicitFramePairRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getExplicitFramePairAccess().getTargetFrameCrossReference_0_6_0());
					}
				)
			)
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getExplicitFramePairAccess().getRightFrameParserRuleCall_1_0());
			}
			ruleRightFrame
			{
				afterParserOrEnumRuleCall();
			}
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getExplicitFramePairAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExplicitFramePairRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getExplicitFramePairAccess().getTargetFrameCrossReference_1_2_0());
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getExplicitFramePairAccess().getCommaKeyword_1_3());
				}
			)?
			{
				newCompositeNode(grammarAccess.getExplicitFramePairAccess().getLeftFrameParserRuleCall_1_4());
			}
			ruleLeftFrame
			{
				afterParserOrEnumRuleCall();
			}
			otherlv_12='='
			{
				newLeafNode(otherlv_12, grammarAccess.getExplicitFramePairAccess().getEqualsSignKeyword_1_5());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExplicitFramePairRule());
						}
					}
					otherlv_13=RULE_ID
					{
						newLeafNode(otherlv_13, grammarAccess.getExplicitFramePairAccess().getBaseFrameCrossReference_1_6_0());
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLeftFrame
entryRuleLeftFrame returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLeftFrameRule()); }
	iv_ruleLeftFrame=ruleLeftFrame
	{ $current=$iv_ruleLeftFrame.current.getText(); }
	EOF;

// Rule LeftFrame
ruleLeftFrame returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='base'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLeftFrameAccess().getBaseKeyword_0());
		}
		    |
		kw='left'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLeftFrameAccess().getLeftKeyword_1());
		}
		    |
		kw='left_frame'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLeftFrameAccess().getLeft_frameKeyword_2());
		}
	)
;

// Entry rule entryRuleRightFrame
entryRuleRightFrame returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRightFrameRule()); }
	iv_ruleRightFrame=ruleRightFrame
	{ $current=$iv_ruleRightFrame.current.getText(); }
	EOF;

// Rule RightFrame
ruleRightFrame returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='target'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRightFrameAccess().getTargetKeyword_0());
		}
		    |
		kw='right'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRightFrameAccess().getRightKeyword_1());
		}
		    |
		kw='right_frame'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRightFrameAccess().getRight_frameKeyword_2());
		}
	)
;

// Entry rule entryRuleImplicitFramePair
entryRuleImplicitFramePair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplicitFramePairRule()); }
	iv_ruleImplicitFramePair=ruleImplicitFramePair
	{ $current=$iv_ruleImplicitFramePair.current; }
	EOF;

// Rule ImplicitFramePair
ruleImplicitFramePair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImplicitFramePairRule());
						}
					}
					otherlv_0=RULE_ID
					{
						newLeafNode(otherlv_0, grammarAccess.getImplicitFramePairAccess().getTargetFrameCrossReference_0_0_0());
					}
				)
			)
			otherlv_1='->'
			{
				newLeafNode(otherlv_1, grammarAccess.getImplicitFramePairAccess().getHyphenMinusGreaterThanSignKeyword_0_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImplicitFramePairRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getImplicitFramePairAccess().getBaseFrameCrossReference_0_2_0());
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImplicitFramePairRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getImplicitFramePairAccess().getBaseFrameCrossReference_1_0_0());
					}
				)
			)
			otherlv_4='<-'
			{
				newLeafNode(otherlv_4, grammarAccess.getImplicitFramePairAccess().getLessThanSignHyphenMinusKeyword_1_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImplicitFramePairRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getImplicitFramePairAccess().getTargetFrameCrossReference_1_2_0());
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFramesList
entryRuleFramesList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFramesListRule()); }
	iv_ruleFramesList=ruleFramesList
	{ $current=$iv_ruleFramesList.current; }
	EOF;

// Rule FramesList
ruleFramesList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Frames'
		{
			newLeafNode(otherlv_0, grammarAccess.getFramesListAccess().getFramesKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getFramesListAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFramesListAccess().getItemsFrameParserRuleCall_2_0());
				}
				lv_items_2_0=ruleFrame
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFramesListRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"iit.dsl.coord.CoordTransDsl.Frame");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getFramesListAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFramesListAccess().getItemsFrameParserRuleCall_3_1_0());
					}
					lv_items_4_0=ruleFrame
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFramesListRule());
						}
						add(
							$current,
							"items",
							lv_items_4_0,
							"iit.dsl.coord.CoordTransDsl.Frame");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getFramesListAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleParameterLiteral
entryRuleParameterLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterLiteralRule()); }
	iv_ruleParameterLiteral=ruleParameterLiteral
	{ $current=$iv_ruleParameterLiteral.current; }
	EOF;

// Rule ParameterLiteral
ruleParameterLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getParameterLiteralAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getParameterLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleParametersDeclaration
entryRuleParametersDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParametersDeclarationRule()); }
	iv_ruleParametersDeclaration=ruleParametersDeclaration
	{ $current=$iv_ruleParametersDeclaration.current; }
	EOF;

// Rule ParametersDeclaration
ruleParametersDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Params'
		{
			newLeafNode(otherlv_0, grammarAccess.getParametersDeclarationAccess().getParamsKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getParametersDeclarationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParametersDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getParametersDeclarationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParametersDeclarationAccess().getParamsParameterLiteralParserRuleCall_3_0());
				}
				lv_params_3_0=ruleParameterLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParametersDeclarationRule());
					}
					add(
						$current,
						"params",
						lv_params_3_0,
						"iit.dsl.coord.CoordTransDsl.ParameterLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getParametersDeclarationAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParametersDeclarationAccess().getParamsParameterLiteralParserRuleCall_4_1_0());
					}
					lv_params_5_0=ruleParameterLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParametersDeclarationRule());
						}
						add(
							$current,
							"params",
							lv_params_5_0,
							"iit.dsl.coord.CoordTransDsl.ParameterLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getParametersDeclarationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleFrame
entryRuleFrame returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFrameRule()); }
	iv_ruleFrame=ruleFrame
	{ $current=$iv_ruleFrame.current; }
	EOF;

// Rule Frame
ruleFrame returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getFrameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFrameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleTransform
entryRuleTransform returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformRule()); }
	iv_ruleTransform=ruleTransform
	{ $current=$iv_ruleTransform.current; }
	EOF;

// Rule Transform
ruleTransform returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransformAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransformRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getTransformAccess().getLeftFrameFrameCrossReference_1_0());
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getTransformAccess().getRightCurlyBracketKeyword_2());
		}
		otherlv_3='_X_'
		{
			newLeafNode(otherlv_3, grammarAccess.getTransformAccess().get_X_Keyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getTransformAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransformRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getTransformAccess().getRightFrameFrameCrossReference_5_0());
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getTransformAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getTransformAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransformAccess().getMatricesAbsMatrixParserRuleCall_8_0());
				}
				lv_matrices_8_0=ruleAbsMatrix
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransformRule());
					}
					add(
						$current,
						"matrices",
						lv_matrices_8_0,
						"iit.dsl.coord.CoordTransDsl.AbsMatrix");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_9='['
			{
				newLeafNode(otherlv_9, grammarAccess.getTransformAccess().getLeftSquareBracketKeyword_9_0());
			}
			(
				(
					lv_userName_10_0=RULE_ID
					{
						newLeafNode(lv_userName_10_0, grammarAccess.getTransformAccess().getUserNameIDTerminalRuleCall_9_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransformRule());
						}
						setWithLastConsumed(
							$current,
							"userName",
							lv_userName_10_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_11=']'
			{
				newLeafNode(otherlv_11, grammarAccess.getTransformAccess().getRightSquareBracketKeyword_9_2());
			}
		)?
	)
;

// Entry rule entryRuleAbsMatrix
entryRuleAbsMatrix returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbsMatrixRule()); }
	iv_ruleAbsMatrix=ruleAbsMatrix
	{ $current=$iv_ruleAbsMatrix.current; }
	EOF;

// Rule AbsMatrix
ruleAbsMatrix returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbsMatrixAccess().getRotationParserRuleCall_0());
		}
		this_Rotation_0=ruleRotation
		{
			$current = $this_Rotation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbsMatrixAccess().getTranslationParserRuleCall_1());
		}
		this_Translation_1=ruleTranslation
		{
			$current = $this_Translation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRotation
entryRuleRotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotationRule()); }
	iv_ruleRotation=ruleRotation
	{ $current=$iv_ruleRotation.current; }
	EOF;

// Rule Rotation
ruleRotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRotationAccess().getRxParserRuleCall_0());
		}
		this_Rx_0=ruleRx
		{
			$current = $this_Rx_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRotationAccess().getRyParserRuleCall_1());
		}
		this_Ry_1=ruleRy
		{
			$current = $this_Ry_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRotationAccess().getRzParserRuleCall_2());
		}
		this_Rz_2=ruleRz
		{
			$current = $this_Rz_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTranslation
entryRuleTranslation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTranslationRule()); }
	iv_ruleTranslation=ruleTranslation
	{ $current=$iv_ruleTranslation.current; }
	EOF;

// Rule Translation
ruleTranslation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTranslationAccess().getTxParserRuleCall_0());
		}
		this_Tx_0=ruleTx
		{
			$current = $this_Tx_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTranslationAccess().getTyParserRuleCall_1());
		}
		this_Ty_1=ruleTy
		{
			$current = $this_Ty_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTranslationAccess().getTzParserRuleCall_2());
		}
		this_Tz_2=ruleTz
		{
			$current = $this_Tz_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTx
entryRuleTx returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTxRule()); }
	iv_ruleTx=ruleTx
	{ $current=$iv_ruleTx.current; }
	EOF;

// Rule Tx
ruleTx returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Tx'
		{
			newLeafNode(otherlv_0, grammarAccess.getTxAccess().getTxKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTxAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTxAccess().getArgArgSpecParserRuleCall_2_0());
				}
				lv_arg_2_0=ruleArgSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTxRule());
					}
					set(
						$current,
						"arg",
						lv_arg_2_0,
						"iit.dsl.coord.CoordTransDsl.ArgSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getTxAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleTy
entryRuleTy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTyRule()); }
	iv_ruleTy=ruleTy
	{ $current=$iv_ruleTy.current; }
	EOF;

// Rule Ty
ruleTy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Ty'
		{
			newLeafNode(otherlv_0, grammarAccess.getTyAccess().getTyKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTyAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTyAccess().getArgArgSpecParserRuleCall_2_0());
				}
				lv_arg_2_0=ruleArgSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTyRule());
					}
					set(
						$current,
						"arg",
						lv_arg_2_0,
						"iit.dsl.coord.CoordTransDsl.ArgSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getTyAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleTz
entryRuleTz returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTzRule()); }
	iv_ruleTz=ruleTz
	{ $current=$iv_ruleTz.current; }
	EOF;

// Rule Tz
ruleTz returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Tz'
		{
			newLeafNode(otherlv_0, grammarAccess.getTzAccess().getTzKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTzAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTzAccess().getArgArgSpecParserRuleCall_2_0());
				}
				lv_arg_2_0=ruleArgSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTzRule());
					}
					set(
						$current,
						"arg",
						lv_arg_2_0,
						"iit.dsl.coord.CoordTransDsl.ArgSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getTzAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleRx
entryRuleRx returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRxRule()); }
	iv_ruleRx=ruleRx
	{ $current=$iv_ruleRx.current; }
	EOF;

// Rule Rx
ruleRx returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Rx'
		{
			newLeafNode(otherlv_0, grammarAccess.getRxAccess().getRxKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRxAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRxAccess().getArgArgSpecParserRuleCall_2_0());
				}
				lv_arg_2_0=ruleArgSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRxRule());
					}
					set(
						$current,
						"arg",
						lv_arg_2_0,
						"iit.dsl.coord.CoordTransDsl.ArgSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getRxAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleRy
entryRuleRy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRyRule()); }
	iv_ruleRy=ruleRy
	{ $current=$iv_ruleRy.current; }
	EOF;

// Rule Ry
ruleRy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Ry'
		{
			newLeafNode(otherlv_0, grammarAccess.getRyAccess().getRyKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRyAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRyAccess().getArgArgSpecParserRuleCall_2_0());
				}
				lv_arg_2_0=ruleArgSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRyRule());
					}
					set(
						$current,
						"arg",
						lv_arg_2_0,
						"iit.dsl.coord.CoordTransDsl.ArgSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getRyAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleRz
entryRuleRz returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRzRule()); }
	iv_ruleRz=ruleRz
	{ $current=$iv_ruleRz.current; }
	EOF;

// Rule Rz
ruleRz returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Rz'
		{
			newLeafNode(otherlv_0, grammarAccess.getRzAccess().getRzKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRzAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRzAccess().getArgArgSpecParserRuleCall_2_0());
				}
				lv_arg_2_0=ruleArgSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRzRule());
					}
					set(
						$current,
						"arg",
						lv_arg_2_0,
						"iit.dsl.coord.CoordTransDsl.ArgSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getRzAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleArgSpec
entryRuleArgSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgSpecRule()); }
	iv_ruleArgSpec=ruleArgSpec
	{ $current=$iv_ruleArgSpec.current; }
	EOF;

// Rule ArgSpec
ruleArgSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArgSpecAccess().getFloatLiteralParserRuleCall_0());
		}
		this_FloatLiteral_0=ruleFloatLiteral
		{
			$current = $this_FloatLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArgSpecAccess().getExprParserRuleCall_1());
		}
		this_Expr_1=ruleExpr
		{
			$current = $this_Expr_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArgSpecAccess().getConstantParserRuleCall_2());
		}
		this_Constant_2=ruleConstant
		{
			$current = $this_Constant_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloatLiteralRule()); }
	iv_ruleFloatLiteral=ruleFloatLiteral
	{ $current=$iv_ruleFloatLiteral.current; }
	EOF;

// Rule FloatLiteral
ruleFloatLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_FLOAT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFloatLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"iit.dsl.coord.CoordTransDsl.FLOAT");
			}
		)
	)
;

// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	iv_ruleConstant=ruleConstant
	{ $current=$iv_ruleConstant.current; }
	EOF;

// Rule Constant
ruleConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_minus_0_0='-'
				{
					newLeafNode(lv_minus_0_0, grammarAccess.getConstantAccess().getMinusHyphenMinusKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstantRule());
					}
					setWithLastConsumed($current, "minus", true, "-");
				}
			)
		)?
		otherlv_1='consts'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstantAccess().getConstsKeyword_1());
		}
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getConstantAccess().getFullStopKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleExpr
entryRuleExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprRule()); }
	iv_ruleExpr=ruleExpr
	{ $current=$iv_ruleExpr.current; }
	EOF;

// Rule Expr
ruleExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExprAccess().getPlainExprParserRuleCall_0());
		}
		this_PlainExpr_0=rulePlainExpr
		{
			$current = $this_PlainExpr_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExprAccess().getMultExprParserRuleCall_1());
		}
		this_MultExpr_1=ruleMultExpr
		{
			$current = $this_MultExpr_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExprAccess().getDivExprParserRuleCall_2());
		}
		this_DivExpr_2=ruleDivExpr
		{
			$current = $this_DivExpr_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePlainExpr
entryRulePlainExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlainExprRule()); }
	iv_rulePlainExpr=rulePlainExpr
	{ $current=$iv_rulePlainExpr.current; }
	EOF;

// Rule PlainExpr
rulePlainExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPlainExprAccess().getIdentifierIdentifierParserRuleCall_0());
			}
			lv_identifier_0_0=ruleIdentifier
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPlainExprRule());
				}
				set(
					$current,
					"identifier",
					lv_identifier_0_0,
					"iit.dsl.coord.CoordTransDsl.Identifier");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMultExpr
entryRuleMultExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultExprRule()); }
	iv_ruleMultExpr=ruleMultExpr
	{ $current=$iv_ruleMultExpr.current; }
	EOF;

// Rule MultExpr
ruleMultExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_mult_0_0=RULE_FLOAT
				{
					newLeafNode(lv_mult_0_0, grammarAccess.getMultExprAccess().getMultFLOATTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultExprRule());
					}
					setWithLastConsumed(
						$current,
						"mult",
						lv_mult_0_0,
						"iit.dsl.coord.CoordTransDsl.FLOAT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMultExprAccess().getIdentifierIdentifierParserRuleCall_1_0());
				}
				lv_identifier_1_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultExprRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_1_0,
						"iit.dsl.coord.CoordTransDsl.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDivExpr
entryRuleDivExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDivExprRule()); }
	iv_ruleDivExpr=ruleDivExpr
	{ $current=$iv_ruleDivExpr.current; }
	EOF;

// Rule DivExpr
ruleDivExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDivExprAccess().getIdentifierIdentifierParserRuleCall_0_0());
				}
				lv_identifier_0_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDivExprRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_0_0,
						"iit.dsl.coord.CoordTransDsl.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='/'
		{
			newLeafNode(otherlv_1, grammarAccess.getDivExprAccess().getSolidusKeyword_1());
		}
		(
			(
				lv_div_2_0=RULE_FLOAT
				{
					newLeafNode(lv_div_2_0, grammarAccess.getDivExprAccess().getDivFLOATTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDivExprRule());
					}
					setWithLastConsumed(
						$current,
						"div",
						lv_div_2_0,
						"iit.dsl.coord.CoordTransDsl.FLOAT");
				}
			)
		)
	)
;

// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	iv_ruleIdentifier=ruleIdentifier
	{ $current=$iv_ruleIdentifier.current; }
	EOF;

// Rule Identifier
ruleIdentifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIdentifierAccess().getParameterParserRuleCall_0());
		}
		this_Parameter_0=ruleParameter
		{
			$current = $this_Parameter_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIdentifierAccess().getVariableParserRuleCall_1());
		}
		this_Variable_1=ruleVariable
		{
			$current = $this_Variable_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIdentifierAccess().getPILiteralParserRuleCall_2());
		}
		this_PILiteral_2=rulePILiteral
		{
			$current = $this_PILiteral_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_minus_0_0='-'
				{
					newLeafNode(lv_minus_0_0, grammarAccess.getParameterAccess().getMinusHyphenMinusKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed($current, "minus", true, "-");
				}
			)
		)?
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getParameterAccess().getParamParameterLiteralCrossReference_1_0());
				}
				ruleFQN
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_minus_0_0='-'
				{
					newLeafNode(lv_minus_0_0, grammarAccess.getVariableAccess().getMinusHyphenMinusKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed($current, "minus", true, "-");
				}
			)
		)?
		(
			(
				lv_varname_1_0=RULE_ID
				{
					newLeafNode(lv_varname_1_0, grammarAccess.getVariableAccess().getVarnameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"varname",
						lv_varname_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePILiteral
entryRulePILiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPILiteralRule()); }
	iv_rulePILiteral=rulePILiteral
	{ $current=$iv_rulePILiteral.current; }
	EOF;

// Rule PILiteral
rulePILiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_minus_0_0='-'
				{
					newLeafNode(lv_minus_0_0, grammarAccess.getPILiteralAccess().getMinusHyphenMinusKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPILiteralRule());
					}
					setWithLastConsumed($current, "minus", true, "-");
				}
			)
		)?
		(
			(
				lv_text_1_0=RULE_PI
				{
					newLeafNode(lv_text_1_0, grammarAccess.getPILiteralAccess().getTextPITerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPILiteralRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"iit.dsl.coord.CoordTransDsl.PI");
				}
			)
		)
	)
;

// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFQNRule()); }
	iv_ruleFQN=ruleFQN
	{ $current=$iv_ruleFQN.current.getText(); }
	EOF;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1());
		}
		this_ID_2=RULE_ID
		{
			$current.merge(this_ID_2);
		}
		{
			newLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_2());
		}
	)
;

RULE_PI : ('PI'|'pi'|'Pi');

RULE_FLOAT : ('+'?|'-') ('0'..'9')* '.' ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
